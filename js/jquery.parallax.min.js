




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>parallax/deploy/jquery.parallax.min.js at master · wagerfield/parallax · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="wagerfield/parallax" name="twitter:title" /><meta content="Simple, lightweight parallax engine that reacts to the orientation of a smart device" name="twitter:description" /><meta content="https://1.gravatar.com/avatar/7bd1fc55b75e50127628ce751072c322?d=https%3A%2F%2Fidenticons.github.com%2Faeb1fdf8b3b51b997a3fa3a8af3dcd67.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://1.gravatar.com/avatar/7bd1fc55b75e50127628ce751072c322?d=https%3A%2F%2Fidenticons.github.com%2Faeb1fdf8b3b51b997a3fa3a8af3dcd67.png&amp;r=x&amp;s=400" property="og:image" /><meta content="wagerfield/parallax" property="og:title" /><meta content="https://github.com/wagerfield/parallax" property="og:url" /><meta content="Simple, lightweight parallax engine that reacts to the orientation of a smart device" property="og:description" />

    <meta name="hostname" content="github-fe132-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="BACE3237:1E8A:51D509D:53194674" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="6kmB+O3GIFaP/3lYI0yCnxzLPSL986gFu1qcOk3jizM=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-efc81cb4b97f3a8aa50591503541e483fdcfcd01.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-06954e0e776374cf6f29a77b92d2861a8584e08a.css" media="all" rel="stylesheet" type="text/css" />
    
    


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-871d634893ce516b04e248598f5e07f9a15e7a3b.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-02086713b124b010abee29043ef37eb74d74aac4.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="e34bb3824b9a68a9cef6650e8bf9e954">

        <link data-pjax-transient rel='permalink' href='/wagerfield/parallax/blob/a42beb93b7cdcb9dbfdb0e96e5eafd5232b86ba2/deploy/jquery.parallax.min.js'>

  <meta name="description" content="Simple, lightweight parallax engine that reacts to the orientation of a smart device" />

  <meta content="412747" name="octolytics-dimension-user_id" /><meta content="wagerfield" name="octolytics-dimension-user_login" /><meta content="11820425" name="octolytics-dimension-repository_id" /><meta content="wagerfield/parallax" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="11820425" name="octolytics-dimension-repository_network_root_id" /><meta content="wagerfield/parallax" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/wagerfield/parallax/commits/master.atom" rel="alternate" title="Recent Commits to parallax:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production  vis-public page-blob tipsy-tooltips">
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2Fwagerfield%2Fparallax%2Fblob%2Fmaster%2Fdeploy%2Fjquery.parallax.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="wagerfield/parallax"
      data-branch="master"
      data-sha="129aa9acbe09b26fbc051403f990e38f7230c470"
  >

    <input type="hidden" name="nwo" value="wagerfield/parallax" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
    <a href="/login?return_to=%2Fwagerfield%2Fparallax"
    class="minibutton with-count js-toggler-target star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to star a repository" rel="nofollow">
    <span class="octicon octicon-star"></span>Star
  </a>

    <a class="social-count js-social-count" href="/wagerfield/parallax/stargazers">
      5,480
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2Fwagerfield%2Fparallax"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/wagerfield/parallax/network" class="social-count">
        724
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/wagerfield" class="url fn" itemprop="url" rel="author"><span itemprop="title">wagerfield</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/wagerfield/parallax" class="js-current-repository js-repo-home-link">parallax</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/wagerfield/parallax" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /wagerfield/parallax">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/wagerfield/parallax/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /wagerfield/parallax/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>34</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/wagerfield/parallax/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /wagerfield/parallax/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/wagerfield/parallax/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /wagerfield/parallax/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/wagerfield/parallax/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /wagerfield/parallax/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/wagerfield/parallax/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /wagerfield/parallax/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/wagerfield/parallax.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/wagerfield/parallax.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/wagerfield/parallax" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/wagerfield/parallax" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



                <a href="/wagerfield/parallax/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:73979cbd2223067e429c825709d0400c -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/wagerfield/parallax/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/wagerfield/parallax/blob/gh-pages/deploy/jquery.parallax.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/wagerfield/parallax/blob/master/deploy/jquery.parallax.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/wagerfield/parallax/tree/v1.0.0/deploy/jquery.parallax.min.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wagerfield/parallax" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">parallax</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/wagerfield/parallax/tree/master/deploy" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">deploy</span></a></span><span class="separator"> / </span><strong class="final-path">jquery.parallax.min.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="deploy/jquery.parallax.min.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit file-history-tease">
    <img alt="Matthew Wagerfield" class="main-avatar js-avatar" data-user="412747" height="24" src="https://1.gravatar.com/avatar/7bd1fc55b75e50127628ce751072c322?d=https%3A%2F%2Fidenticons.github.com%2Faeb1fdf8b3b51b997a3fa3a8af3dcd67.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/wagerfield" rel="author">wagerfield</a></span>
    <time class="js-relative-date" data-title-format="YYYY-MM-DD HH:mm:ss" datetime="2014-01-31T03:52:54-08:00" title="2014-01-31 03:52:54">January 31, 2014</time>
    <div class="commit-title">
        <a href="/wagerfield/parallax/commit/9937e1538c02c1ae65be68e643ea8cdede9ca602" class="message" data-pjax="true" title=":gb: Updated scripts to use strict mode."><img class="emoji" title=":gb:" alt=":gb:" src="https://github.global.ssl.fastly.net/images/icons/emoji/gb.png" height="20" width="20" align="absmiddle"> Updated scripts to use strict mode.</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>2</strong> contributors</a></p>
          <a class="avatar tooltipped tooltipped-s" aria-label="wagerfield" href="/wagerfield/parallax/commits/master/deploy/jquery.parallax.min.js?author=wagerfield"><img alt="Matthew Wagerfield" class=" js-avatar" data-user="412747" height="20" src="https://1.gravatar.com/avatar/7bd1fc55b75e50127628ce751072c322?d=https%3A%2F%2Fidenticons.github.com%2Faeb1fdf8b3b51b997a3fa3a8af3dcd67.png&amp;r=x&amp;s=140" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="drojdjou" href="/wagerfield/parallax/commits/master/deploy/jquery.parallax.min.js?author=drojdjou"><img alt="bartekd" class=" js-avatar" data-user="572109" height="20" src="https://2.gravatar.com/avatar/125195ae3d4c7176e1ccf59b7258127d?d=https%3A%2F%2Fidenticons.github.com%2Fb0203784732c97d96d0880981394c9bf.png&amp;r=x&amp;s=140" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Matthew Wagerfield" class=" js-avatar" data-user="412747" height="24" src="https://1.gravatar.com/avatar/7bd1fc55b75e50127628ce751072c322?d=https%3A%2F%2Fidenticons.github.com%2Faeb1fdf8b3b51b997a3fa3a8af3dcd67.png&amp;r=x&amp;s=140" width="24" />
            <a href="/wagerfield">wagerfield</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="bartekd" class=" js-avatar" data-user="572109" height="24" src="https://2.gravatar.com/avatar/125195ae3d4c7176e1ccf59b7258127d?d=https%3A%2F%2Fidenticons.github.com%2Fb0203784732c97d96d0880981394c9bf.png&amp;r=x&amp;s=140" width="24" />
            <a href="/drojdjou">drojdjou</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>31 lines (31 sloc)</span>
          <span class="meta-divider"></span>
        <span>9.321 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
              <a class="minibutton disabled tooltipped tooltipped-w" href="#"
                 aria-label="You must be signed in to make or propose changes">Edit</a>
          <a href="/wagerfield/parallax/raw/master/deploy/jquery.parallax.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/wagerfield/parallax/blame/master/deploy/jquery.parallax.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/wagerfield/parallax/commits/master/deploy/jquery.parallax.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger disabled empty-icon tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="c1">//============================================================</span></div><div class='line' id='LC2'><span class="c1">//</span></div><div class='line' id='LC3'><span class="c1">// The MIT License</span></div><div class='line' id='LC4'><span class="c1">//</span></div><div class='line' id='LC5'><span class="c1">// Copyright (C) 2014 Matthew Wagerfield - @mwagerfield</span></div><div class='line' id='LC6'><span class="c1">//</span></div><div class='line' id='LC7'><span class="c1">// Permission is hereby granted, free of charge, to any</span></div><div class='line' id='LC8'><span class="c1">// person obtaining a copy of this software and associated</span></div><div class='line' id='LC9'><span class="c1">// documentation files (the &quot;Software&quot;), to deal in the</span></div><div class='line' id='LC10'><span class="c1">// Software without restriction, including without limitation</span></div><div class='line' id='LC11'><span class="c1">// the rights to use, copy, modify, merge, publish, distribute,</span></div><div class='line' id='LC12'><span class="c1">// sublicense, and/or sell copies of the Software, and to</span></div><div class='line' id='LC13'><span class="c1">// permit persons to whom the Software is furnished to do</span></div><div class='line' id='LC14'><span class="c1">// so, subject to the following conditions:</span></div><div class='line' id='LC15'><span class="c1">//</span></div><div class='line' id='LC16'><span class="c1">// The above copyright notice and this permission notice</span></div><div class='line' id='LC17'><span class="c1">// shall be included in all copies or substantial portions</span></div><div class='line' id='LC18'><span class="c1">// of the Software.</span></div><div class='line' id='LC19'><span class="c1">//</span></div><div class='line' id='LC20'><span class="c1">// THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY</span></div><div class='line' id='LC21'><span class="c1">// OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT</span></div><div class='line' id='LC22'><span class="c1">// LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS</span></div><div class='line' id='LC23'><span class="c1">// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO</span></div><div class='line' id='LC24'><span class="c1">// EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE</span></div><div class='line' id='LC25'><span class="c1">// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN</span></div><div class='line' id='LC26'><span class="c1">// AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class='line' id='LC27'><span class="c1">// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE</span></div><div class='line' id='LC28'><span class="c1">// OR OTHER DEALINGS IN THE SOFTWARE.</span></div><div class='line' id='LC29'><span class="c1">//</span></div><div class='line' id='LC30'><span class="c1">//============================================================</span></div><div class='line' id='LC31'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;api&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;.layer&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">calibrateX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;calibrate-x&quot;</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">calibrateY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;calibrate-y&quot;</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">invertX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;invert-x&quot;</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">invertY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;invert-y&quot;</span><span class="p">)</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">limitX</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;limit-x&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">limitY</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;limit-y&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">scalarX</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;scalar-x&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">scalarY</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;scalar-y&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">frictionX</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;friction-x&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">frictionY</span><span class="o">:</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;friction-y&quot;</span><span class="p">))</span><span class="o">||</span><span class="kc">null</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="kc">null</span><span class="o">===</span><span class="nx">s</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">s</span><span class="p">[</span><span class="nx">o</span><span class="p">];</span><span class="nx">t</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationTimer</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationFlag</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">depths</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">raf</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ox</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">oy</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ow</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">oh</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cy</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">vx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">vy</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onDeviceOrientation</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onDeviceOrientation</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onOrientationTimer</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onOrientationTimer</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onCalibrationTimer</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onCalibrationTimer</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationFrame</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationFrame</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">onWindowResize</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">onWindowResize</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">initialise</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="s2">&quot;parallax&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">30</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">calibrationThreshold</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">calibrationDelay</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">supportDelay</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">calibrateX</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">calibrateY</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">invertX</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">invertY</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">limitX</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">limitY</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">scalarX</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">scalarY</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">frictionX</span><span class="o">:</span><span class="p">.</span><span class="mi">1</span><span class="p">,</span><span class="nx">frictionY</span><span class="o">:</span><span class="p">.</span><span class="mi">1</span><span class="p">};</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transformSupport</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">r</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">p</span><span class="p">;</span><span class="nx">p</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">[</span><span class="nx">p</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">[</span><span class="nx">p</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;Transform&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;transform&quot;</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">!==</span><span class="nx">s</span><span class="p">){</span><span class="nx">n</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">switch</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;2D&quot;</span><span class="o">:</span><span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;3D&quot;</span><span class="o">:</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;translate3d(1px,1px,1px)&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">o</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="o">!==</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">o</span><span class="p">))}</span><span class="k">return</span> <span class="nx">r</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">ww</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">wh</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hw</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">hh</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">portrait</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">desktop</span><span class="o">=!</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/(iPhone|iPod|iPad|Android|BlackBerry|BB10|mobi|tablet|opera mini|nexus 7)/i</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">vendors</span><span class="o">=</span><span class="p">[</span><span class="kc">null</span><span class="p">,[</span><span class="s2">&quot;-webkit-&quot;</span><span class="p">,</span><span class="s2">&quot;webkit&quot;</span><span class="p">],[</span><span class="s2">&quot;-moz-&quot;</span><span class="p">,</span><span class="s2">&quot;Moz&quot;</span><span class="p">],[</span><span class="s2">&quot;-o-&quot;</span><span class="p">,</span><span class="s2">&quot;O&quot;</span><span class="p">],[</span><span class="s2">&quot;-ms-&quot;</span><span class="p">,</span><span class="s2">&quot;ms&quot;</span><span class="p">]],</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">motionSupport</span><span class="o">=!!</span><span class="nx">i</span><span class="p">.</span><span class="nx">DeviceMotionEvent</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">orientationSupport</span><span class="o">=!!</span><span class="nx">i</span><span class="p">.</span><span class="nx">DeviceOrientationEvent</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">orientationStatus</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transform2DSupport</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transformSupport</span><span class="p">(</span><span class="s2">&quot;2D&quot;</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transform3DSupport</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">transformSupport</span><span class="p">(</span><span class="s2">&quot;3D&quot;</span><span class="p">),</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">initialise</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;static&quot;</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">.</span><span class="nx">first</span><span class="p">().</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">proxy</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">depths</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;depth&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">)},</span><span class="k">this</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">accelerate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">accelerate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">updateDimensions</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">enable</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">queueCalibration</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationDelay</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">updateDimensions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">ox</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">left</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">oy</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">ow</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">width</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">oh</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$context</span><span class="p">.</span><span class="nx">height</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">ww</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">wh</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hw</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ww</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hh</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">wh</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">queueCalibration</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationTimer</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationTimer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onCalibrationTimer</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enable</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationSupport</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">portrait</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;deviceorientation&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onDeviceOrientation</span><span class="p">),</span><span class="nx">setTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onOrientationTimer</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">supportDelay</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">cx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cy</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">portrait</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">)),</span><span class="nx">i</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onWindowResize</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">raf</span><span class="o">=</span><span class="nx">requestAnimationFrame</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationFrame</span><span class="p">))},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disable</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationSupport</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;deviceorientation&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onDeviceOrientation</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">onWindowResize</span><span class="p">),</span><span class="nx">cancelAnimationFrame</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">raf</span><span class="p">))},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">calibrate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateX</span><span class="o">=</span><span class="nx">t</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateX</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateY</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateY</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invert</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">invertX</span><span class="o">=</span><span class="nx">t</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">invertX</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">invertY</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">invertY</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">friction</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionX</span><span class="o">=</span><span class="nx">t</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionX</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionY</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionY</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scalar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarX</span><span class="o">=</span><span class="nx">t</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarX</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarY</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarY</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">limit</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">limitX</span><span class="o">=</span><span class="nx">t</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">limitX</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">limitY</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="nx">s</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">limitY</span><span class="o">:</span><span class="nx">i</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">clamp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">css</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">o</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="kc">null</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">t</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">vendors</span><span class="p">[</span><span class="nx">a</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">!==</span><span class="nx">s</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">break</span><span class="p">}},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">accelerate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;translate3d(0,0,0)&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="s2">&quot;transform-style&quot;</span><span class="p">,</span><span class="s2">&quot;preserve-3d&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="s2">&quot;backface-visibility&quot;</span><span class="p">,</span><span class="s2">&quot;hidden&quot;</span><span class="p">)}},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setPosition</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">i</span><span class="o">+=</span><span class="s2">&quot;%&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">+=</span><span class="s2">&quot;%&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">transform3DSupport</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;translate3d(&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;,0)&quot;</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">transform2DSupport</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;translate(&quot;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">e</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onOrientationTimer</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationSupport</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationStatus</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">disable</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationSupport</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">enable</span><span class="p">())},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onCalibrationTimer</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationFlag</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onWindowResize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">updateDimensions</span><span class="p">()},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onAnimationFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">cx</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">cy</span><span class="p">;(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationThreshold</span><span class="o">||</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">&gt;</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationThreshold</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">queueCalibration</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">portrait</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateX</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateY</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarY</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateX</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrateY</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">scalarY</span><span class="p">),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">limitX</span><span class="p">))</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clamp</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="p">,</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">limitX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">limitX</span><span class="p">)),</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">limitY</span><span class="p">))</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clamp</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="p">,</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">limitY</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">limitY</span><span class="p">)),</span><span class="k">this</span><span class="p">.</span><span class="nx">vx</span><span class="o">+=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">mx</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">vx</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionX</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">vy</span><span class="o">+=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">my</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">vy</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">frictionY</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">s</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">depths</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">n</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">$layers</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vx</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">invertX</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">vy</span><span class="o">*</span><span class="nx">o</span><span class="o">*</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">invertY</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setPosition</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">r</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">raf</span><span class="o">=</span><span class="nx">requestAnimationFrame</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">onAnimationFrame</span><span class="p">)},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onDeviceOrientation</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">desktop</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">beta</span><span class="o">&amp;&amp;</span><span class="kc">null</span><span class="o">!==</span><span class="nx">t</span><span class="p">.</span><span class="nx">gamma</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">orientationStatus</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">beta</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">gamma</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="nx">a</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">portrait</span><span class="o">!==</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">portrait</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationFlag</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationFlag</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">calibrationFlag</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cx</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">cy</span><span class="o">=</span><span class="nx">s</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="o">=</span><span class="nx">s</span><span class="p">}},</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">onMouseMove</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">ix</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">hw</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">hw</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">iy</span><span class="o">=</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">hh</span><span class="p">)</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">hh</span><span class="p">};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">enable</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">enable</span><span class="p">,</span><span class="nx">disable</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">disable</span><span class="p">,</span><span class="nx">calibrate</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">calibrate</span><span class="p">,</span><span class="nx">friction</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">friction</span><span class="p">,</span><span class="nx">invert</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">invert</span><span class="p">,</span><span class="nx">scalar</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">scalar</span><span class="p">,</span><span class="nx">limit</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">limit</span><span class="p">};</span><span class="nx">t</span><span class="p">.</span><span class="nx">fn</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">)),</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">))})}})(</span><span class="nb">window</span><span class="p">.</span><span class="nx">jQuery</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">Zepto</span><span class="p">,</span><span class="nb">window</span><span class="p">,</span><span class="nb">document</span><span class="p">),</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;ms&quot;</span><span class="p">,</span><span class="s2">&quot;moz&quot;</span><span class="p">,</span><span class="s2">&quot;webkit&quot;</span><span class="p">,</span><span class="s2">&quot;o&quot;</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="p">;</span><span class="o">++</span><span class="nx">e</span><span class="p">)</span><span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">=</span><span class="nb">window</span><span class="p">[</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;RequestAnimationFrame&quot;</span><span class="p">],</span><span class="nb">window</span><span class="p">.</span><span class="nx">cancelAnimationFrame</span><span class="o">=</span><span class="nb">window</span><span class="p">[</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;CancelAnimationFrame&quot;</span><span class="p">]</span><span class="o">||</span><span class="nb">window</span><span class="p">[</span><span class="nx">i</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;CancelRequestAnimationFrame&quot;</span><span class="p">];</span><span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">||</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">16</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="nx">t</span><span class="p">)),</span><span class="nx">o</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">)},</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span> <span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="nx">o</span><span class="p">}),</span><span class="nb">window</span><span class="p">.</span><span class="nx">cancelAnimationFrame</span><span class="o">||</span><span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">cancelAnimationFrame</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">t</span><span class="p">)})}();</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.02750s from github-fe132-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

